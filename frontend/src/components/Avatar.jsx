import React, { useRef, useState, useEffect } from "react";
import { useGLTF, OrbitControls, PerspectiveCamera } from '@react-three/drei';
import { Canvas, useFrame } from "@react-three/fiber";

export function Model(props) {
        /*
    Auto-generated by: https://github.com/pmndrs/gltfjsx
    */
    const { nodes, materials } = useGLTF('models//robot_model.glb')
    
    return (
        <group {...props} dispose={null}>
        <mesh
            castShadow
            receiveShadow
            geometry={nodes.avatarModel_core.geometry}
            material={materials.lambert1}
            position={[0, 0.004, -0.005]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={[0.015, 0.015, 0.025]}
        />
        <mesh
            castShadow
            receiveShadow
            geometry={nodes.avatarModel_head.geometry}
            material={materials.lambert1}
            position={[0, 0.034, 0]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={[0.037, 0.01, 0.024]}
        />
        <mesh
            castShadow
            receiveShadow
            geometry={nodes.avatarModel_neck.geometry}
            material={materials.lambert1}
            position={[0, 0.008, -0.004]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={0.012}
        />
        <mesh
            castShadow
            receiveShadow
            geometry={nodes.avatarModel_shell.geometry}
            material={materials.lambert1}
            position={[0, -0.017, -0.005]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={[0.034, 0.021, 0.027]}
        />
        <mesh
            castShadow
            receiveShadow
            geometry={nodes.avatarModel_shoulderL.geometry}
            material={materials.lambert1}
            position={[0.013, 0.010, -0.005]}
            rotation={[Math.PI / 2, 0.055, 0]}
            scale={[0.007, 0.009, 0.009]}
        />
        <group position={[-0.029, -0.03, 0]} rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <mesh
            castShadow
            receiveShadow
            geometry={nodes.pasted__avatarModel_shoulderL.geometry}
            material={materials.lambert1}
            position={[1.566, -0.563, -3.975]}
            rotation={[0, -0.055, Math.PI]}
            scale={[0.732, 0.905, 0.905]}
            />
        </group>
        </group>
    )
}

useGLTF.preload('models/robot_model.glb')

function Avatar() {

    return (
        <>
            <Canvas>
                <PerspectiveCamera
                    makeDefault
                    position={[0, 0, .15]}
                    fov={50}
                />
                <OrbitControls />
                <directionalLight position={[1, 2, 2]} intensity={3} />
                <Model />
            </Canvas>
        </>
    )
}

export default Avatar;